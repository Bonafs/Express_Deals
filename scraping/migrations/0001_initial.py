# Generated by Django 5.2.4 on 2025-07-09 18:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0002_rename_products_pr_categor_a5b5d6_idx_products_pr_categor_50f5f1_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_keywords', models.CharField(blank=True, help_text='Alert for any product matching keywords', max_length=500)),
                ('alert_type', models.CharField(choices=[('below', 'Price Below'), ('above', 'Price Above'), ('change', 'Price Change'), ('percentage', 'Percentage Drop'), ('deal', 'Deal Alert')], max_length=20)),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('percentage_threshold', models.PositiveIntegerField(blank=True, help_text='Percentage drop threshold', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('triggered', 'Triggered'), ('paused', 'Paused'), ('expired', 'Expired')], default='active', max_length=20)),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('webhook', 'Webhook')], max_length=20)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('failed', 'Failed'), ('pending', 'Pending')], max_length=20)),
                ('message', models.TextField()),
                ('recipient', models.CharField(max_length=200)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraping.pricealert')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapeTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('site_type', models.CharField(choices=[('amazon', 'Amazon'), ('walmart', 'Walmart'), ('target', 'Target'), ('bestbuy', 'Best Buy'), ('ebay', 'eBay'), ('newegg', 'Newegg'), ('custom', 'Custom Website')], max_length=50)),
                ('base_url', models.URLField()),
                ('search_url_template', models.TextField(help_text='URL template with {query} placeholder')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('scrape_frequency_hours', models.PositiveIntegerField(default=24)),
                ('max_pages', models.PositiveIntegerField(default=5)),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('product_selector', models.TextField(help_text='CSS selector for product containers')),
                ('title_selector', models.TextField(help_text='CSS selector for product title')),
                ('price_selector', models.TextField(help_text='CSS selector for product price')),
                ('image_selector', models.TextField(help_text='CSS selector for product image')),
                ('url_selector', models.TextField(help_text='CSS selector for product URL')),
                ('rating_selector', models.TextField(blank=True, help_text='CSS selector for rating')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_scraped', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapeJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('search_query', models.CharField(blank=True, max_length=500)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('products_found', models.PositiveIntegerField(default=0)),
                ('products_imported', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('pages_scraped', models.PositiveIntegerField(default=0)),
                ('execution_time_seconds', models.PositiveIntegerField(default=0)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraping.scrapetarget')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(help_text='Product ID from source site', max_length=200)),
                ('title', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('image_url', models.URLField()),
                ('product_url', models.URLField()),
                ('description', models.TextField(blank=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('review_count', models.PositiveIntegerField(blank=True, null=True)),
                ('brand', models.CharField(blank=True, max_length=200)),
                ('availability', models.CharField(blank=True, max_length=100)),
                ('shipping_info', models.TextField(blank=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('imported_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.product')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraping.scrapejob')),
            ],
            options={
                'ordering': ['-scraped_at'],
                'unique_together': {('job', 'external_id')},
            },
        ),
    ]
